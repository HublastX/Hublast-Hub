basePath: /api
definitions:
  controllers.ChangePasswordRequest:
    properties:
      current_password:
        example: password123
        type: string
      new_password:
        example: newpassword123
        minLength: 6
        type: string
    required:
    - current_password
    - new_password
    type: object
  controllers.CreateProjectRequest:
    properties:
      backend_tech:
        type: string
      delivery_date:
        type: string
      description:
        type: string
      estimated_time:
        type: integer
      frontend_tech:
        type: string
      title:
        type: string
    required:
    - backend_tech
    - delivery_date
    - description
    - estimated_time
    - frontend_tech
    - title
    type: object
  controllers.CreateRoadmapRequest:
    properties:
      area:
        $ref: '#/definitions/models.RoadmapArea'
      content:
        type: string
      course_links:
        type: string
      difficulty:
        $ref: '#/definitions/models.DifficultyLevel'
      title:
        type: string
    required:
    - area
    - content
    - difficulty
    - title
    type: object
  controllers.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: johndoe
        type: string
    required:
    - password
    - username
    type: object
  controllers.RegisterRequest:
    properties:
      email:
        example: john@example.com
        type: string
      password:
        example: password123
        minLength: 6
        type: string
      username:
        example: johndoe
        type: string
    required:
    - email
    - password
    - username
    type: object
  controllers.UserIDRequest:
    properties:
      user_id:
        type: integer
    required:
    - user_id
    type: object
  models.DifficultyLevel:
    enum:
    - beginner
    - intermediate
    - advanced
    type: string
    x-enum-varnames:
    - Beginner
    - Intermediate
    - Advanced
  models.RoadmapArea:
    enum:
    - frontend
    - backend
    type: string
    x-enum-varnames:
    - Frontend
    - Backend
host: localhost:3005
info:
  contact:
    email: support@hublast.com
    name: API Support
  description: Project Management System API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: HubLast-Hub API
  version: "1.0"
paths:
  /admin/roadmaps:
    post:
      consumes:
      - application/json
      description: Create a new learning roadmap (admin only)
      parameters:
      - description: Roadmap information
        in: body
        name: roadmap
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateRoadmapRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Roadmap created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - Admin only
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new roadmap
      tags:
      - roadmaps
  /admin/roadmaps/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing roadmap (admin only)
      parameters:
      - description: Roadmap ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Roadmap deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - Admin only
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete roadmap
      tags:
      - roadmaps
    put:
      consumes:
      - application/json
      description: Update an existing roadmap (admin only)
      parameters:
      - description: Roadmap ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated roadmap information
        in: body
        name: roadmap
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateRoadmapRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Roadmap updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - Admin only
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Roadmap not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update roadmap information
      tags:
      - roadmaps
  /admin/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - admin
  /admin/users/{id}/promote:
    post:
      consumes:
      - application/json
      description: Change a regular user's role to admin
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User promoted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Promote user to admin
      tags:
      - admin
  /api/admin/projects/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a project by its ID (admin only)
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Project deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - admin only
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a project
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Updates an existing project with the provided details
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated project details
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns message and updated project
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - admin only
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Project not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a project
      tags:
      - projects
  /api/admin/projects/{id}/approve:
    post:
      consumes:
      - application/json
      description: Approves a pending project (admin only)
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Project approved successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - admin only
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Approve a project
      tags:
      - projects
  /api/admin/projects/{id}/reject:
    post:
      consumes:
      - application/json
      description: Rejects a pending project (admin only)
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Project rejected successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - admin only
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Reject a project
      tags:
      - projects
  /api/admin/projects/{id}/responsible:
    post:
      consumes:
      - application/json
      description: Sets a user as responsible for a project (admin only)
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: User ID to set as responsible
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.UserIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Project responsible set successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - admin only
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Set project responsible
      tags:
      - projects
  /api/admin/projects/{id}/users:
    delete:
      consumes:
      - application/json
      description: Removes a user from a specific project (admin only)
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: User ID to remove
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.UserIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User removed from project successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - admin only
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Remove user from project
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Adds a user to a specific project (admin only)
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: User ID to add
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.UserIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User added to project successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - admin only
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add user to project
      tags:
      - projects
  /api/projects:
    get:
      consumes:
      - application/json
      description: Retrieves all projects, optionally filtered by status
      parameters:
      - description: Filter projects by status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns list of projects
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Creates a new project with the provided details
      parameters:
      - description: Project details
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Returns message and created project
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new project
      tags:
      - projects
  /api/projects/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a project by its ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns project details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Project not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a specific project
      tags:
      - projects
  /api/projects/{id}/join:
    post:
      consumes:
      - application/json
      description: Allows the current user to request joining a specific project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Join request successful
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Request to join a project
      tags:
      - projects
  /api/projects/{id}/users:
    get:
      consumes:
      - application/json
      description: Retrieves all users associated with a specific project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns project details with users
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Project not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get users in a project
      tags:
      - projects
  /api/user/projects:
    get:
      consumes:
      - application/json
      description: Retrieves all projects associated with the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Returns list of user's projects
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get current user's projects
      tags:
      - projects
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login with username and password
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful with token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user in the system
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - authentication
  /roadmaps:
    get:
      consumes:
      - application/json
      description: Get a list of all roadmaps, optionally filtered by area
      parameters:
      - description: Filter by roadmap area
        in: query
        name: area
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of roadmaps
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all roadmaps
      tags:
      - roadmaps
  /roadmaps/{id}:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific roadmap
      parameters:
      - description: Roadmap ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Roadmap details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Roadmap not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get roadmap by ID
      tags:
      - roadmaps
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all users
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user details by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user details by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user information
      tags:
      - users
  /users/change-password:
    post:
      consumes:
      - application/json
      description: Change the password of the authenticated user
      parameters:
      - description: Password change data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Change user password
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
